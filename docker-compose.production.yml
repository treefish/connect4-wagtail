version: '3.9'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: connect4-nginx
    depends_on:
      - wagtail
    env_file:
      - ./.env
    ports:
      # Note: this is port 80 because that's what nginx is running from.
      - 8014:80
    volumes:
      - ./env:/env
      - ./static:/usr/share/nginx/html/static
      - ./media:/usr/share/nginx/html/media

  wagtail:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: connect4-wagtail
    volumes:
      - .:/app/:consistent
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh
    expose:
      - 8000
    ports:
      - 8587:587
    #command : wait-for-it.sh db:5432 -- python manage.py runserver 0.0.0.0:8000
    command : wait-for-it.sh db:5432 -- gunicorn website.wsgi:application -w 2 --bind 0.0.0.0:8000 --timeout 120
    env_file:
      - ./.env
    depends_on:
      - db

  db:
    image: postgres:15.2
    restart: unless-stopped
    container_name: connect4-wagtail-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  redis:
    restart: unless-stopped
    container_name: connect4-redis
    image: redis:latest
    expose:
      - 6379
    volumes:
      - redisdata:/data

  celery:
    restart: unless-stopped
    container_name: connect4-celery
    build:
      context: .
    ports:
      - 8588:587
    command: celery -A website worker -l INFO
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - wagtail


volumes:
  postgres_data:
  redisdata: